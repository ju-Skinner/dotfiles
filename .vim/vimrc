set nocompatible

" Automatic formatting {{{
autocmd BufWritePre *.rb :%s/\s\+$//e
autocmd BufWritePre *.html :%s/\s\+$//e
autocmd BufWritePre *.html :%s/\s\+$//e
au BufRead,BufNewFile Rakefile setf ruby
au BufRead,BufNewFile Guardfile setf ruby
au BufRead,BufNewFile Gemfile setf ruby
au BufRead,BufNewFile Procfile setf yaml
au BufNewFile,BufRead *.rabl setf ruby
au BufNewFile,BufRead *.rhtml set syn=eruby
au BufNewFile,BufRead *.erb set syn=eruby
au BufNewFile,BufRead *.json setf javascript
au BufNewFile,BufRead *.coffee setf coffee

syntax on 				" Syntax highlighting
" }}}

" Editor  settings {{{
set tabstop=2
set shiftwidth=2
set softtabstop=2
set backspace=indent,eol,start
set expandtab				        " Uses spaces instead of tabs
set smarttab				        " let's tab key insert 'tab stops', and bksp deletes tabs
set shiftround				      " tab / shifting moves to closest tabstop.
set autoindent				      " Match indents on new lines.
set smartindent				      " Intelligently dedent / indent new lines based on rules.
set showmatch               " Show matching brackets when text indicator is over them
set showcmd                 " show incomplete command
set noshowmode              " disables the command mode from displaying
set scrolloff=5             " Start scrolling three lines before the horizontal window border 
set nu                      " show line number
set ruler                   " show row and column number
set laststatus=2            " always shows the status line
set virtualedit+=block      " allow the cursor to go anywhere in visual block mode
set splitright              " put new windows on the right
set splitbelow              " and below
set history=1000            " remember more commands and search history
set undolevels=1000         " use many muchos levels of undo
set timeoutlen=1000         " key mapping delay 
set ttimeoutlen=0           " key code delay
" }}}

" Wildmenu {{{
set wildmenu                "make tab completion behave like bash
set wildmode=list:longest,full
set wildignore+=.hg,.git,.svn                   " Version control
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg  " Images
set wildignore+=vendor,tmp,*.log                " Rails
set wildignore+=*.sw?
set wildignore+=*.DS_Store?
" }}}

" Misc {{{
" We  have VCS -- we don't need this
set nobackup				        " we have vcs
set nowritebackup			      " we have vcs
set noswapfile
set nohidden				        " Do NOT  allow me to have buffers with unsaved changes

" don't nag me when hiding buffers
set autoread				        " when a file has changed on disk, just load it. Don't ask
set autowrite               " autmotically write the file when leaving a modified buffe
"set autowriteall            " automatically write a file when leaving vim

" Make search more sane
set ignorecase				      " case insensitive search
set smartcase				        " If there are uppercase letters, become case-sensitive
set showmatch				        " live match highlighting
set incsearch				        " live incremental searching
set hlsearch				        " hightlight matches
set gdefault				        " use the `g` flag by default
" }}}

" Vim Mappings {{{
" leader is a key that allows you to have your own 'namespace" of keybindings.
" You'll see it a lot below as <leader>
let mapleader = "\<Space>"
" let mapleader = ","

" So we don't have to reach for escape to leave insert move.
inoremap jj <esc>

" create new vsplit, and switch to it
noremap <leader>v <C-w>v<C-w>l
noremap <leader>s <C-w>s<C-w>j

" bindings for easy split nav
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" use sane regex's when searching
nnoremap / /\v
vnoremap / /\v

" clear match highlighting
noremap <leader>cm :noh<cr>:call clearmatches()<cr>

" Quick buffer switching - like cmd-tabbing
nnoremap <leader><leader> :bnext<cr>

" Visual line nav, not real line nav
" If you wrap lines, vim by default won't let you move down one line to the
" wrapped portion. This fixes that
noremap j gj
noremap k gk
vnoremap j gj
vnoremap k gk

noremap H ^             " H to start of line
noremap L $             " L to the end of line

" Disable the arrow keys, force ourselves to use VIM navigation keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

nnoremap <leader>w :w<CR>   " Quick way to save a file
nnoremap <leader>q :q<CR>   " Quick way to close the current file/window

vmap <leader>y "+y        " Yank to system clipboard
vmap <leader>d "+d        " Delete and save contents to system clipboard
nmap <leader>p "+p        " Paste from system clipboard
nmap <leader>P "+P        " Paste before using system clipboard
vmap <leader>p "+p        " Paste from system clipboard in visual mode
vmap <leader>P "+P        " Paste before using system clipboard in visual mode
" }}}

source ~/dotfiles/.vim/vim-plugins.vim

" Finally the color scheme
set bg=dark
" colorscheme distill

" This will autoreload the vimrc after saving
" the file
if has("autocmd")
  augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
  augroup END " }
endif

" Include users local vimrc
" This will override anything in this file
" should it be set up above.
if filereadable(expand("~/.vimrc.local"))
    source ~/.vimrc.local
endif

" vim:foldmethod=marker:foldlevel=0
